--CITIES
INSERT INTO CITIES(CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT DISTINCT CURRENT_CITY,CURRENT_STATE,CURRENT_COUNTRY
FROM project1.PUBLIC_USER_INFORMATION
    UNION SELECT DISTINCT EVENT_CITY,EVENT_STATE,EVENT_COUNTRY FROM project1.PUBLIC_EVENT_INFORMATION
    UNION SELECT DISTINCT HOMETOWN_CITY,HOMETOWN_STATE,HOMETOWN_COUNTRY FROM project1.PUBLIC_USER_INFORMATION;

--PROGRAMS
INSERT INTO PROGRAMS (INSTITUTION, CONCENTRATION, DEGREE)
SELECT DISTINCT INF.INSTITUTION_NAME, INF.PROGRAM_CONCENTRATION, INF.PROGRAM_DEGREE
FROM project1.PUBLIC_USER_INFORMATION INF
WHERE INF.INSTITUTION_NAME IS NOT NULL;

--USERS
INSERT INTO USERS(USER_ID,YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH,FIRST_NAME,LAST_NAME,GENDER)
SELECT DISTINCT USER_ID,YEAR_OF_BIRTH,MONTH_OF_BIRTH,DAY_OF_BIRTH,FIRST_NAME,LAST_NAME,GENDER FROM project1.PUBLIC_USER_INFORMATION;

--FRIENDS
INSERT INTO FRIENDS(USER1_ID, USER2_ID) SELECT * FROM project1.PUBLIC_ARE_FRIENDS;

--USER_EVENTS
INSERT INTO USER_EVENTS(EVENT_ID,EVENT_CREATOR_ID,EVENT_CITY_ID,EVENT_NAME,EVENT_DESCRIPTION,EVENT_START_TIME,EVENT_HOST,EVENT_ADDRESS,
    EVENT_TAGLINE,EVENT_END_TIME,EVENT_TYPE,EVENT_SUBTYPE)
SELECT DISTINCT 
    INF.EVENT_ID,INF.EVENT_CREATOR_ID,CIT.CITY_ID,INF.EVENT_NAME,INF.EVENT_DESCRIPTION,INF.EVENT_START_TIME,INF.EVENT_HOST,
    INF.EVENT_ADDRESS,INF.EVENT_TAGLINE,INF.EVENT_END_TIME,INF.EVENT_TYPE,INF.EVENT_SUBTYPE
FROM project1.PUBLIC_EVENT_INFORMATION INF
INNER JOIN CITIES CIT ON ((INF.EVENT_CITY = CIT.CITY_NAME) AND (INF.EVENT_STATE=CIT.STATE_NAME) AND (INF.EVENT_COUNTRY=CIT.COUNTRY_NAME));

-- Turn off COMMIT
SET AUTOCOMMIT OFF;
--PHOTOS 
INSERT INTO PHOTOS(PHOTO_ID,ALBUM_ID,PHOTO_CAPTION,PHOTO_LINK,PHOTO_CREATED_TIME,PHOTO_MODIFIED_TIME)
SELECT DISTINCT PHOTO_ID,ALBUM_ID,PHOTO_CAPTION,PHOTO_LINK,PHOTO_CREATED_TIME,PHOTO_MODIFIED_TIME FROM project1.PUBLIC_PHOTO_INFORMATION;

--EDUCATION
INSERT INTO EDUCATION (USER_ID,PROGRAM_ID,PROGRAM_YEAR) SELECT INF.USER_ID, P.PROGRAM_ID, INF.PROGRAM_YEAR FROM project1.PUBLIC_USER_INFORMATION INF 
INNER JOIN PROGRAMS P ON INF.INSTITUTION_NAME = P.INSTITUTION AND INF.PROGRAM_CONCENTRATION = P.CONCENTRATION AND INF.PROGRAM_DEGREE = P.DEGREE
WHERE NOT EXISTS (
    SELECT 1
    FROM EDUCATION EDU WHERE (EDU.USER_ID = INF.USER_ID)AND (EDU.PROGRAM_ID = P.PROGRAM_ID)AND (EDU.PROGRAM_YEAR = INF.PROGRAM_YEAR)
);

--ALBUMS
INSERT INTO ALBUMS(ALBUM_ID,ALBUM_OWNER_ID,COVER_PHOTO_ID,ALBUM_NAME,ALBUM_LINK,ALBUM_VISIBILITY,ALBUM_CREATED_TIME,ALBUM_MODIFIED_TIME) 
SELECT DISTINCT
    ALBUM_ID,OWNER_ID,COVER_PHOTO_ID,ALBUM_NAME,ALBUM_LINK,ALBUM_VISIBILITY,ALBUM_CREATED_TIME,ALBUM_MODIFIED_TIME
FROM project1.PUBLIC_PHOTO_INFORMATION;
-- constraint with albums, allow 
COMMIT;
SET AUTOCOMMIT ON;

--TAGS
INSERT INTO TAGS(TAG_PHOTO_ID,TAG_SUBJECT_ID,TAG_CREATED_TIME,TAG_X,TAG_Y) SELECT * FROM project1.PUBLIC_TAG_INFORMATION;

--USER_HOMETOWN_CITIES

INSERT INTO USER_HOMETOWN_CITIES(USER_ID, HOMETOWN_CITY_ID)
SELECT DISTINCT INF.USER_ID, CIT.CITY_ID FROM project1.PUBLIC_USER_INFORMATION INF
INNER JOIN CITIES CIT ON ((INF.HOMETOWN_CITY = CIT.CITY_NAME) AND(INF.HOMETOWN_STATE = CIT.STATE_NAME) AND(INF.HOMETOWN_COUNTRY = CIT.COUNTRY_NAME));

--USER_CURRENT_CITIES
INSERT INTO USER_CURRENT_CITIES(USER_ID, CURRENT_CITY_ID)
SELECT DISTINCT INF.USER_ID, CIT.CITY_ID FROM project1.PUBLIC_USER_INFORMATION INF
INNER JOIN CITIES CIT ON ((INF.CURRENT_CITY = CIT.CITY_NAME) AND(INF.CURRENT_STATE = CIT.STATE_NAME) AND(INF.CURRENT_COUNTRY = CIT.COUNTRY_NAME));